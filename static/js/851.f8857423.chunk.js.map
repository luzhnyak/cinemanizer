{"version":3,"file":"static/js/851.f8857423.chunk.js","mappings":"gLAEaA,EAAa,SAAHC,GAAyC,IAADC,EAAAD,EAAlCE,OAAUC,EAAMF,EAANE,OAAQC,EAAOH,EAAPG,QAC7C,OACEC,EAAAA,EAAAA,KAAA,OAAAC,UACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMF,SAAA,EACnBC,EAAAA,EAAAA,MAAA,MAAIC,UAAU,cAAaF,SAAA,CAAC,WAASH,MACrCE,EAAAA,EAAAA,KAAA,OAAKG,UAAU,YAAWF,UACxBD,EAAAA,EAAAA,KAAA,KAAGG,UAAU,YAAWF,SAAEF,UAKpC,E,wCC4BA,EAlCgB,WAAO,IAADK,EACZC,GAAYC,EAAAA,EAAAA,MAAZD,QAERE,GAAmCC,EAAAA,EAAAA,IAA8BH,EAAS,CACxEI,MAAOJ,IADDK,EAAIH,EAAJG,KAAMC,EAASJ,EAATI,UAAWC,EAAKL,EAALK,OAKzBC,EAAAA,EAAAA,YAAU,WACJD,GAAOE,EAAAA,GAAAA,MAAYF,EAAMF,KAAKK,QACpC,GAAG,CAACH,IAEJ,IAAMI,EAAuB,QAAhBZ,EAAO,OAAJM,QAAI,IAAJA,OAAI,EAAJA,EAAMO,eAAO,IAAAb,EAAAA,EAAI,CAAC,EAElC,OAAIO,GACKX,EAAAA,EAAAA,KAACkB,EAAAA,EAAM,KAIdhB,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAIG,UAAU,YAAWF,SAAC,aAE1BC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,UAASF,SAAA,CACrBe,EAAQG,KAAI,SAAAtB,GACX,OAAOG,EAAAA,EAAAA,KAACN,EAAU,CAACG,OAAQA,GAAaA,EAAOuB,GACjD,IACoB,IAAnBJ,EAAQK,SACPrB,EAAAA,EAAAA,KAAA,KAAAC,SAAG,mDAKb,C","sources":["components/Card/CardReview.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import React from 'react';\n\nexport const CardReview = ({ review: { author, content } }) => {\n  return (\n    <div>\n      <div className=\"card\">\n        <h5 className=\"card-header\">Author: {author}</h5>\n        <div className=\"card-body\">\n          <p className=\"card-text\">{content}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { CardReview } from 'components/Card/CardReview';\nimport { Loader } from 'components/Loader/Loader';\nimport { useEffect } from 'react';\nimport toast from 'react-hot-toast';\nimport { useParams } from 'react-router-dom';\nimport { useFetchMovieReviewsByIdQuery } from 'redux/api';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n\n  const { data, isLoading, error } = useFetchMovieReviewsByIdQuery(movieId, {\n    skip: !movieId,\n  });\n\n  // Виводимо помилку\n  useEffect(() => {\n    if (error) toast.error(error.data.message);\n  }, [error]);\n\n  const reviews = data?.results ?? {};\n\n  if (isLoading) {\n    return <Loader />;\n  }\n\n  return (\n    <div>\n      <h3 className=\"mt-3 mb-3\">Reviews</h3>\n\n      <div className=\"row g-2\">\n        {reviews.map(review => {\n          return <CardReview review={review} key={review.id} />;\n        })}\n        {reviews.length === 0 && (\n          <p>We don't have any reviews for this movie.</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["CardReview","_ref","_ref$review","review","author","content","_jsx","children","_jsxs","className","_data$results","movieId","useParams","_useFetchMovieReviews","useFetchMovieReviewsByIdQuery","skip","data","isLoading","error","useEffect","toast","message","reviews","results","Loader","map","id","length"],"sourceRoot":""}