{"version":3,"file":"static/js/935.7c693ea1.chunk.js","mappings":"0LAIaA,EAAY,SAAHC,GAA0D,IAADC,EAAAD,EAAnDE,MAASC,EAAIF,EAAJE,KAAMC,EAASH,EAATG,UAAWC,EAAYJ,EAAZI,aAAcC,EAAEL,EAAFK,GAClE,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,2CAA0CC,UACvDC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,aAAYC,SAAA,EACzBF,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAACC,GAAE,WAAAC,OAAaP,GAAKG,UACxBF,EAAAA,EAAAA,KAAA,OACEO,IACET,EAAY,mCAAAQ,OAC2BR,G,0uKAGzCG,UAAU,eACVO,IAAKZ,OAGTO,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWC,SAAA,EACxBF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,6BAA4BC,SAAEN,KAC5CI,EAAAA,EAAAA,KAAA,KAAGC,UAAU,4BAA2BC,SAAEL,WAKpD,E,wCCeA,EAlCa,WAAO,IAADY,EACTC,GAAYC,EAAAA,EAAAA,MAAZD,QAERE,GAAmCC,EAAAA,EAAAA,IAA8BH,EAAS,CACxEI,MAAOJ,IADDK,EAAIH,EAAJG,KAAMC,EAASJ,EAATI,UAAWC,EAAKL,EAALK,OAKzBC,EAAAA,EAAAA,YAAU,WACJD,GAAOE,EAAAA,GAAAA,MAAYF,EAAMF,KAAKK,QACpC,GAAG,CAACH,IAEJ,IAAMI,EAAoB,QAAbZ,EAAO,OAAJM,QAAI,IAAJA,OAAI,EAAJA,EAAMO,YAAI,IAAAb,EAAAA,EAAI,CAAC,EAE/B,OAAIO,GACKhB,EAAAA,EAAAA,KAACuB,EAAAA,EAAM,KAIdpB,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,YAAWC,SAAC,UAE1BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,UAASC,SAAA,CACrBmB,EAAQG,KAAI,SAAA7B,GACX,OAAOK,EAAAA,EAAAA,KAACR,EAAS,CAACG,MAAOA,GAAYA,EAAM8B,QAC7C,IACoB,IAAnBJ,EAAQK,SACP1B,EAAAA,EAAAA,KAAA,KAAAE,SAAG,kDAKb,C","sources":["components/Card/CardActor.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import React from 'react';\nimport noPhoto from '../../images/no-photo.jpg';\nimport { Link } from 'react-router-dom';\n\nexport const CardActor = ({ actor: { name, character, profile_path, id } }) => {\n  return (\n    <div className=\"col-lg-2 col-md-3 col-sm-4 col-6 me-auto\">\n      <div className=\"card h-100\">\n        <Link to={`/people/${id}`}>\n          <img\n            src={\n              profile_path\n                ? `https://image.tmdb.org/t/p/w200/${profile_path}`\n                : noPhoto\n            }\n            className=\"card-img-top\"\n            alt={name}\n          />\n        </Link>\n        <div className=\"card-body\">\n          <h5 className=\"card-title overflow-hidden\">{name}</h5>\n          <p className=\"card-text overflow-hidden\">{character}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { CardActor } from 'components/Card/CardActor';\nimport { Loader } from 'components/Loader/Loader';\nimport { useEffect } from 'react';\nimport toast from 'react-hot-toast';\nimport { useParams } from 'react-router-dom';\nimport { useFetchMovieCreditsByIdQuery } from 'redux/api';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n\n  const { data, isLoading, error } = useFetchMovieCreditsByIdQuery(movieId, {\n    skip: !movieId,\n  });\n\n  // Виводимо помилку\n  useEffect(() => {\n    if (error) toast.error(error.data.message);\n  }, [error]);\n\n  const credits = data?.cast ?? {};\n\n  if (isLoading) {\n    return <Loader />;\n  }\n\n  return (\n    <div>\n      <h3 className=\"mt-3 mb-3\">Cast</h3>\n\n      <div className=\"row g-2\">\n        {credits.map(actor => {\n          return <CardActor actor={actor} key={actor.cast_id} />;\n        })}\n        {credits.length === 0 && (\n          <p>We don't have any actors for this movie.</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Cast;\n"],"names":["CardActor","_ref","_ref$actor","actor","name","character","profile_path","id","_jsx","className","children","_jsxs","Link","to","concat","src","alt","_data$cast","movieId","useParams","_useFetchMovieCredits","useFetchMovieCreditsByIdQuery","skip","data","isLoading","error","useEffect","toast","message","credits","cast","Loader","map","cast_id","length"],"sourceRoot":""}